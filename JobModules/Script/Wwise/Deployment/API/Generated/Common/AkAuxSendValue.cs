using System;
using UnityEngine;

#if ! (UNITY_DASHBOARD_WIDGET || UNITY_WEBPLAYER || UNITY_WII || UNITY_WIIU || UNITY_NACL || UNITY_FLASH || UNITY_BLACKBERRY) // Disable under unsupported platforms.
//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class AkAuxSendValue : IDisposable
{
    protected bool swigCMemOwn;
    private IntPtr swigCPtr;

    internal AkAuxSendValue(IntPtr cPtr, bool cMemoryOwn)
    {
        swigCMemOwn = cMemoryOwn;
        swigCPtr    = cPtr;
    }

    public ulong listenerID
    {
        set { AkSoundEnginePINVOKE.CSharp_AkAuxSendValue_listenerID_set(swigCPtr, value); }
        get { return AkSoundEnginePINVOKE.CSharp_AkAuxSendValue_listenerID_get(swigCPtr); }
    }

    public uint auxBusID
    {
        set { AkSoundEnginePINVOKE.CSharp_AkAuxSendValue_auxBusID_set(swigCPtr, value); }
        get { return AkSoundEnginePINVOKE.CSharp_AkAuxSendValue_auxBusID_get(swigCPtr); }
    }

    public float fControlValue
    {
        set { AkSoundEnginePINVOKE.CSharp_AkAuxSendValue_fControlValue_set(swigCPtr, value); }
        get { return AkSoundEnginePINVOKE.CSharp_AkAuxSendValue_fControlValue_get(swigCPtr); }
    }

    public virtual void Dispose()
    {
        lock (this)
        {
            if (swigCPtr != IntPtr.Zero)
            {
                if (swigCMemOwn)
                {
                    swigCMemOwn = false;
                    AkSoundEnginePINVOKE.CSharp_delete_AkAuxSendValue(swigCPtr);
                }

                swigCPtr = IntPtr.Zero;
            }

            GC.SuppressFinalize(this);
        }
    }

    internal static IntPtr getCPtr(AkAuxSendValue obj)
    {
        return (obj == null) ? IntPtr.Zero : obj.swigCPtr;
    }

    internal virtual void setCPtr(IntPtr cPtr)
    {
        Dispose();
        swigCPtr = cPtr;
    }

    ~AkAuxSendValue()
    {
        Dispose();
    }

    public void Set(GameObject listener, uint id, float value)
    {
        var listener_id = AkSoundEngine.GetAkGameObjectID(listener);
        AkSoundEngine.PreGameObjectAPICall(listener, listener_id);

        {
            AkSoundEnginePINVOKE.CSharp_AkAuxSendValue_Set(swigCPtr, listener_id, id, value);
        }
    }

    public bool IsSame(GameObject listener, uint id)
    {
        var listener_id = AkSoundEngine.GetAkGameObjectID(listener);
        AkSoundEngine.PreGameObjectAPICall(listener, listener_id);

        {
            return AkSoundEnginePINVOKE.CSharp_AkAuxSendValue_IsSame(swigCPtr, listener_id, id);
        }
    }

    public static int GetSizeOf()
    {
        return AkSoundEnginePINVOKE.CSharp_AkAuxSendValue_GetSizeOf();
    }

    public AKRESULT SetGameObjectAuxSendValues(GameObject in_gameObjectID, uint in_uNumSendValues)
    {
        var in_gameObjectID_id = AkSoundEngine.GetAkGameObjectID(in_gameObjectID);
        AkSoundEngine.PreGameObjectAPICall(in_gameObjectID, in_gameObjectID_id);

        {
            return (AKRESULT) AkSoundEnginePINVOKE.CSharp_AkAuxSendValue_SetGameObjectAuxSendValues(swigCPtr,
                in_gameObjectID_id, in_uNumSendValues);
        }
    }

    public AKRESULT GetGameObjectAuxSendValues(GameObject in_gameObjectID, ref uint io_ruNumSendValues)
    {
        var in_gameObjectID_id = AkSoundEngine.GetAkGameObjectID(in_gameObjectID);
        AkSoundEngine.PreGameObjectAPICall(in_gameObjectID, in_gameObjectID_id);

        {
            return (AKRESULT) AkSoundEnginePINVOKE.CSharp_AkAuxSendValue_GetGameObjectAuxSendValues(swigCPtr,
                in_gameObjectID_id, ref io_ruNumSendValues);
        }
    }
}
#endif // #if ! (UNITY_DASHBOARD_WIDGET || UNITY_WEBPLAYER || UNITY_WII || UNITY_WIIU || UNITY_NACL || UNITY_FLASH || UNITY_BLACKBERRY) // Disable under unsupported platforms.